/* eslint-disable */
/* prettier-ignore */

/**
 * Generated by @igniter-js/cli
 *
 * WARNING: DO NOT EDIT THIS FILE MANUALLY
 *
 * This file was automatically generated from your Igniter router.
 * Any changes made to this file will be overwritten when the CLI regenerates it.
 *
 * To modify the client API, update your controller files instead.
 *
 * Generated: 2025-10-16T03:12:17.421Z
 * Framework: nextjs
 * Output: src/
 */

// Generated by @igniter-js/cli - DO NOT EDIT

export const AppRouterSchema = {
  "controllers": {
    "auth": {
      "name": "auth",
      "path": "/auth",
      "description": "Authentication and authorization",
      "actions": {
        "register": {
          "name": "Register",
          "type": "mutation",
          "path": "/register",
          "method": "POST",
          "description": "Create new user account",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "password": {
                "type": "string",
                "minLength": 8,
                "maxLength": 72,
                "allOf": [
                  {
                    "pattern": "[A-Z]"
                  },
                  {
                    "pattern": "[a-z]"
                  },
                  {
                    "pattern": "[0-9]"
                  },
                  {
                    "pattern": "[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]"
                  }
                ]
              },
              "name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 100
              },
              "document": {
                "type": "string"
              },
              "organizationName": {
                "type": "string"
              }
            },
            "required": [
              "email",
              "password",
              "name"
            ],
            "additionalProperties": false
          }
        },
        "login": {
          "name": "Login",
          "type": "mutation",
          "path": "/login",
          "method": "POST",
          "description": "Authenticate user",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "password": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "email",
              "password"
            ],
            "additionalProperties": false
          }
        },
        "refresh": {
          "name": "Refresh Token",
          "type": "mutation",
          "path": "/refresh",
          "method": "POST",
          "description": "Refresh access token",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "refreshToken": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "refreshToken"
            ],
            "additionalProperties": false
          }
        },
        "logout": {
          "name": "Logout",
          "type": "mutation",
          "path": "/logout",
          "method": "POST",
          "description": "Logout user",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "refreshToken": {
                "type": "string"
              },
              "everywhere": {
                "type": "boolean",
                "default": false
              }
            },
            "additionalProperties": false
          }
        },
        "me": {
          "name": "Get Current User",
          "description": "Get authenticated user data",
          "path": "/me",
          "method": "GET",
          "$Infer": {}
        },
        "changePassword": {
          "name": "Change Password",
          "type": "mutation",
          "path": "/change-password",
          "method": "POST",
          "description": "Change user password",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "currentPassword": {
                "type": "string"
              },
              "newPassword": {
                "type": "string",
                "minLength": 8,
                "maxLength": 72,
                "allOf": [
                  {
                    "pattern": "[A-Z]"
                  },
                  {
                    "pattern": "[a-z]"
                  },
                  {
                    "pattern": "[0-9]"
                  }
                ]
              },
              "confirmPassword": {
                "type": "string"
              }
            },
            "required": [
              "currentPassword",
              "newPassword",
              "confirmPassword"
            ],
            "additionalProperties": false
          }
        },
        "updateProfile": {
          "name": "Update Profile",
          "type": "mutation",
          "path": "/profile",
          "method": "PATCH",
          "description": "Update user profile",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 100
              },
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "additionalProperties": false
          }
        },
        "switchOrganization": {
          "name": "Switch Organization",
          "type": "mutation",
          "path": "/switch-organization",
          "method": "POST",
          "description": "Switch current organization",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "organizationId"
            ],
            "additionalProperties": false
          }
        },
        "listUsers": {
          "name": "List Users",
          "description": "List all users (admin only)",
          "path": "/users",
          "method": "GET",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "forgotPassword": {
          "name": "Forgot Password",
          "type": "mutation",
          "path": "/forgot-password",
          "method": "POST",
          "description": "Request password reset email",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": [
              "email"
            ],
            "additionalProperties": false
          }
        },
        "resetPassword": {
          "name": "Reset Password",
          "type": "mutation",
          "path": "/reset-password",
          "method": "POST",
          "description": "Reset password with token",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              },
              "password": {
                "type": "string",
                "minLength": 8,
                "maxLength": 72
              }
            },
            "required": [
              "token",
              "password"
            ],
            "additionalProperties": false
          }
        },
        "googleAuth": {
          "name": "Google Auth",
          "description": "Initiate Google OAuth flow",
          "path": "/google",
          "method": "GET",
          "$Infer": {}
        },
        "googleCallback": {
          "name": "Google Callback",
          "type": "mutation",
          "path": "/google/callback",
          "method": "POST",
          "description": "Process Google OAuth callback",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              }
            },
            "required": [
              "code"
            ],
            "additionalProperties": false
          }
        },
        "sendVerification": {
          "name": "Send Verification",
          "type": "mutation",
          "path": "/send-verification",
          "method": "POST",
          "description": "Send verification code to email",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": [
              "email"
            ],
            "additionalProperties": false
          }
        },
        "verifyEmail": {
          "name": "Verify Email",
          "type": "mutation",
          "path": "/verify-email",
          "method": "POST",
          "description": "Verify email with code",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "code": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6
              }
            },
            "required": [
              "email",
              "code"
            ],
            "additionalProperties": false
          }
        },
        "signupOTP": {
          "name": "Signup OTP",
          "type": "mutation",
          "path": "/signup-otp",
          "method": "POST",
          "description": "Request signup code via email",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 2
              },
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "additionalProperties": false
          }
        },
        "verifySignupOTP": {
          "name": "Verify Signup OTP",
          "type": "mutation",
          "path": "/verify-signup-otp",
          "method": "POST",
          "description": "Verify signup OTP and create user",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "code": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6
              }
            },
            "required": [
              "email",
              "code"
            ],
            "additionalProperties": false
          }
        },
        "resendVerification": {
          "name": "Resend Verification",
          "type": "mutation",
          "path": "/resend-verification",
          "method": "POST",
          "description": "Resend verification code",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              }
            },
            "required": [
              "email"
            ],
            "additionalProperties": false
          }
        },
        "loginOTP": {
          "name": "Login OTP",
          "type": "mutation",
          "path": "/login-otp",
          "method": "POST",
          "description": "Request passwordless login code via email",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "rememberMe": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "email"
            ],
            "additionalProperties": false
          }
        },
        "verifyLoginOTP": {
          "name": "Verify Login OTP",
          "type": "mutation",
          "path": "/verify-login-otp",
          "method": "POST",
          "description": "Verify passwordless OTP code",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "code": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6
              },
              "rememberMe": {
                "type": "boolean",
                "default": false
              }
            },
            "required": [
              "email",
              "code"
            ],
            "additionalProperties": false
          }
        },
        "verifyMagicLink": {
          "name": "Verify Magic Link",
          "type": "mutation",
          "path": "/verify-magic-link",
          "method": "POST",
          "description": "Verify magic link token (login or signup)",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string"
              }
            },
            "required": [
              "token"
            ],
            "additionalProperties": false
          }
        },
        "completeOnboarding": {
          "name": "CompleteOnboarding",
          "type": "mutation",
          "path": "/onboarding/complete",
          "method": "POST",
          "description": "Mark user onboarding as completed",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        }
      }
    },
    "onboarding": {
      "name": "onboarding",
      "path": "/onboarding",
      "description": "User onboarding management",
      "actions": {
        "complete": {
          "name": "Complete Onboarding",
          "type": "mutation",
          "path": "/complete",
          "method": "POST",
          "description": "Complete user onboarding by creating organization",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "organizationName": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100
              },
              "organizationType": {
                "type": "string",
                "enum": [
                  "pf",
                  "pj"
                ]
              },
              "document": {
                "type": "string",
                "minLength": 11,
                "maxLength": 18
              },
              "businessHoursStart": {
                "type": "string"
              },
              "businessHoursEnd": {
                "type": "string"
              },
              "businessDays": {
                "type": "string"
              },
              "timezone": {
                "type": "string",
                "default": "America/Sao_Paulo"
              }
            },
            "required": [
              "organizationName",
              "organizationType",
              "document"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "organizations": {
      "name": "organizations",
      "path": "/organizations",
      "actions": {
        "create": {
          "type": "mutation",
          "path": "/",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 100
              },
              "document": {
                "type": "string",
                "minLength": 11,
                "maxLength": 18
              },
              "type": {
                "type": "string",
                "enum": [
                  "pf",
                  "pj"
                ]
              },
              "maxInstances": {
                "type": "integer",
                "minimum": 1,
                "maximum": 1000
              },
              "maxUsers": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              },
              "billingType": {
                "type": "string",
                "enum": [
                  "free",
                  "basic",
                  "pro",
                  "enterprise"
                ]
              }
            },
            "required": [
              "name",
              "document",
              "type"
            ],
            "additionalProperties": false
          }
        },
        "list": {
          "path": "/",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {},
          "querySchema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "minimum": 1,
                "default": 1
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "default": 20
              },
              "search": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "pf",
                  "pj"
                ]
              },
              "billingType": {
                "type": "string",
                "enum": [
                  "free",
                  "basic",
                  "pro",
                  "enterprise"
                ]
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "get": {
          "path": "/:id",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        },
        "getCurrent": {
          "path": "/current",
          "method": "GET",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "update": {
          "type": "mutation",
          "path": "/:id",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 100
              },
              "maxInstances": {
                "type": "integer",
                "minimum": 1,
                "maximum": 1000
              },
              "maxUsers": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100
              },
              "billingType": {
                "type": "string",
                "enum": [
                  "free",
                  "basic",
                  "pro",
                  "enterprise"
                ]
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "delete": {
          "type": "mutation",
          "path": "/:id",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "listMembers": {
          "path": "/:id/members",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        },
        "addMember": {
          "type": "mutation",
          "path": "/:id/members",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid"
              },
              "role": {
                "type": "string",
                "enum": [
                  "master",
                  "manager",
                  "user"
                ]
              }
            },
            "required": [
              "userId",
              "role"
            ],
            "additionalProperties": false
          }
        }
      }
    },
    "invitations": {
      "name": "invitations",
      "path": "/invitations",
      "actions": {
        "create": {
          "type": "mutation",
          "path": "/create",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "acceptExisting": {
          "type": "mutation",
          "path": "/accept",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "acceptNew": {
          "type": "mutation",
          "path": "/accept/new",
          "method": "POST",
          "$Infer": {}
        },
        "list": {
          "path": "/list",
          "method": "GET",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "delete": {
          "type": "mutation",
          "path": "/:invitationId",
          "method": "DELETE",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "resend": {
          "type": "mutation",
          "path": "/:invitationId/resend",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "validate": {
          "path": "/validate/:token",
          "method": "GET",
          "$Infer": {}
        }
      }
    },
    "dashboard": {
      "name": "dashboard",
      "path": "/dashboard",
      "description": "Métricas e estatísticas do dashboard",
      "actions": {
        "getMetrics": {
          "name": "GetDashboardMetrics",
          "description": "Obter métricas do dashboard",
          "path": "/metrics",
          "method": "GET",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        }
      }
    },
    "chats": {
      "name": "chats",
      "path": "/chats",
      "actions": {
        "list": {
          "path": "/list",
          "method": "GET",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "count": {
          "path": "/count",
          "method": "GET",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "markAsRead": {
          "type": "mutation",
          "path": "/mark-read",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        }
      }
    },
    "messages": {
      "name": "messages",
      "path": "/messages",
      "actions": {
        "list": {
          "path": "/list",
          "method": "GET",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "sendText": {
          "type": "mutation",
          "path": "/send-text",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "sendImage": {
          "type": "mutation",
          "path": "/send-image",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "sendFile": {
          "type": "mutation",
          "path": "/send-file",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        }
      }
    },
    "media": {
      "name": "media",
      "path": "/messages/media",
      "actions": {
        "sendImage": {
          "type": "mutation",
          "path": "/image",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "sendDocument": {
          "type": "mutation",
          "path": "/document",
          "method": "POST",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        }
      }
    },
    "sessions": {
      "name": "sessions",
      "path": "/sessions",
      "description": "Gerenciamento de sessões de atendimento WhatsApp",
      "actions": {
        "list": {
          "path": "/",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {},
          "querySchema": {
            "type": "object",
            "properties": {
              "organizationId": {
                "type": "string"
              },
              "instanceId": {
                "type": "string"
              },
              "contactId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "QUEUED",
                  "ACTIVE",
                  "PAUSED",
                  "CLOSED"
                ]
              },
              "page": {
                "type": "number",
                "minimum": 1,
                "default": 1
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 50
              }
            },
            "additionalProperties": false
          }
        },
        "get": {
          "path": "/:id",
          "params": {
            "_def": {
              "unknownKeys": "strip",
              "catchall": {
                "_def": {
                  "typeName": "ZodNever"
                },
                "~standard": {
                  "version": 1,
                  "vendor": "zod"
                }
              },
              "typeName": "ZodObject"
            },
            "~standard": {
              "version": 1,
              "vendor": "zod"
            },
            "_cached": null
          },
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {},
          "querySchema": {
            "type": "object",
            "properties": {
              "includeMessages": {
                "type": "boolean",
                "default": true
              },
              "messagesLimit": {
                "type": "number",
                "minimum": 1,
                "maximum": 500,
                "default": 100
              }
            },
            "additionalProperties": false
          }
        },
        "blockAI": {
          "type": "mutation",
          "path": "/:id/block-ai",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "durationMinutes": {
                "type": "number",
                "minimum": 1,
                "maximum": 1440,
                "default": 15
              },
              "reason": {
                "type": "string",
                "default": "manual_response"
              }
            },
            "additionalProperties": false
          }
        },
        "unblockAI": {
          "type": "mutation",
          "path": "/:id/unblock-ai",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "close": {
          "type": "mutation",
          "path": "/:id/close",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {}
        },
        "updateStatus": {
          "type": "mutation",
          "path": "/:id/status",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "QUEUED",
                  "ACTIVE",
                  "PAUSED",
                  "CLOSED"
                ]
              }
            },
            "required": [
              "status"
            ],
            "additionalProperties": false
          }
        },
        "addTags": {
          "type": "mutation",
          "path": "/:id/tags",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            },
            "required": [
              "tags"
            ],
            "additionalProperties": false
          }
        },
        "removeTags": {
          "type": "mutation",
          "path": "/:id/tags",
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1
              }
            },
            "required": [
              "tags"
            ],
            "additionalProperties": false
          }
        },
        "checkAIStatus": {
          "path": "/:id/ai-status",
          "params": {
            "_def": {
              "unknownKeys": "strip",
              "catchall": {
                "_def": {
                  "typeName": "ZodNever"
                },
                "~standard": {
                  "version": 1,
                  "vendor": "zod"
                }
              },
              "typeName": "ZodObject"
            },
            "~standard": {
              "version": 1,
              "vendor": "zod"
            },
            "_cached": null
          },
          "use": [
            {
              "name": "AuthProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        }
      }
    },
    "projects": {
      "name": "projects",
      "path": "/projects",
      "actions": {
        "create": {
          "type": "mutation",
          "path": "/",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "maxLength": 500
              },
              "organizationId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "name",
              "organizationId"
            ],
            "additionalProperties": false
          }
        },
        "list": {
          "path": "/",
          "method": "GET",
          "$Infer": {},
          "querySchema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "minimum": 1,
                "default": 1
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "default": 20
              },
              "search": {
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid"
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "get": {
          "path": "/:id",
          "method": "GET",
          "$Infer": {}
        },
        "update": {
          "type": "mutation",
          "path": "/:id",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 2,
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "maxLength": 500,
                "nullable": true
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "delete": {
          "type": "mutation",
          "path": "/:id",
          "$Infer": {}
        },
        "linkInstance": {
          "type": "mutation",
          "path": "/:id/instances",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "instanceId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "instanceId"
            ],
            "additionalProperties": false
          }
        },
        "unlinkInstance": {
          "type": "mutation",
          "path": "/:id/instances/:instanceId",
          "$Infer": {}
        },
        "listInstances": {
          "path": "/:id/instances",
          "method": "GET",
          "$Infer": {}
        }
      }
    },
    "webhooks": {
      "name": "webhooks",
      "path": "/webhooks",
      "actions": {
        "create": {
          "type": "mutation",
          "path": "/",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "events": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "instance.created",
                    "instance.updated",
                    "instance.deleted",
                    "instance.connected",
                    "instance.disconnected",
                    "message.received",
                    "message.sent",
                    "organization.updated",
                    "user.invited",
                    "user.joined",
                    "user.removed"
                  ]
                },
                "minItems": 1
              },
              "description": {
                "type": "string",
                "maxLength": 500
              },
              "secret": {
                "type": "string",
                "minLength": 8
              },
              "organizationId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "url",
              "events",
              "organizationId"
            ],
            "additionalProperties": false
          }
        },
        "list": {
          "path": "/",
          "method": "GET",
          "$Infer": {},
          "querySchema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "minimum": 1,
                "default": 1
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "default": 20
              },
              "organizationId": {
                "type": "string",
                "format": "uuid"
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "get": {
          "path": "/:id",
          "method": "GET",
          "$Infer": {}
        },
        "update": {
          "type": "mutation",
          "path": "/:id",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "events": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "instance.created",
                    "instance.updated",
                    "instance.deleted",
                    "instance.connected",
                    "instance.disconnected",
                    "message.received",
                    "message.sent",
                    "organization.updated",
                    "user.invited",
                    "user.joined",
                    "user.removed"
                  ]
                },
                "minItems": 1
              },
              "description": {
                "type": "string",
                "maxLength": 500
              },
              "secret": {
                "type": "string",
                "minLength": 8
              },
              "isActive": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "delete": {
          "type": "mutation",
          "path": "/:id",
          "$Infer": {}
        },
        "listDeliveries": {
          "path": "/:id/deliveries",
          "method": "GET",
          "$Infer": {},
          "querySchema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "minimum": 1,
                "default": 1
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 100,
                "default": 20
              },
              "webhookId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string",
                "enum": [
                  "success",
                  "failure",
                  "pending"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "retryDelivery": {
          "type": "mutation",
          "path": "/deliveries/:deliveryId/retry",
          "$Infer": {}
        }
      }
    },
    "example": {
      "name": "example",
      "path": "/example",
      "actions": {
        "hello": {
          "path": "/hello",
          "method": "GET",
          "$Infer": {}
        }
      }
    },
    "instances": {
      "name": "instances",
      "path": "/instances",
      "description": "Gerenciamento de instâncias WhatsApp com integração UAZapi",
      "actions": {
        "create": {
          "name": "CreateInstance",
          "type": "mutation",
          "path": "/",
          "method": "POST",
          "description": "Criar nova instância WhatsApp",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9\\s-_]+$"
              },
              "phoneNumber": {
                "type": "string",
                "pattern": "^\\+?[1-9]\\d{1,14}$"
              },
              "brokerType": {
                "type": "string",
                "enum": [
                  "uazapi"
                ],
                "default": "uazapi"
              },
              "webhookUrl": {
                "type": "string",
                "format": "uri"
              },
              "uazapiToken": {
                "type": "string"
              },
              "brokerId": {
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false
          }
        },
        "list": {
          "name": "ListInstances",
          "description": "Listar instâncias WhatsApp com paginação e filtros",
          "path": "/",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {},
          "querySchema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "exclusiveMinimum": true,
                "minimum": 0,
                "default": 1
              },
              "limit": {
                "type": "integer",
                "exclusiveMinimum": true,
                "minimum": 0,
                "maximum": 100,
                "default": 20
              },
              "status": {
                "type": "string",
                "enum": [
                  "connected",
                  "disconnected",
                  "connecting",
                  "all"
                ],
                "default": "all"
              },
              "search": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "getById": {
          "name": "GetInstanceById",
          "description": "Buscar instância por ID",
          "path": "/:id",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        },
        "update": {
          "name": "UpdateInstance",
          "type": "mutation",
          "path": "/:id",
          "method": "PUT",
          "description": "Atualizar instância existente",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9\\s-_]+$"
              },
              "phoneNumber": {
                "type": "string",
                "pattern": "^\\+?[1-9]\\d{1,14}$"
              },
              "brokerType": {
                "type": "string",
                "enum": [
                  "uazapi"
                ]
              },
              "webhookUrl": {
                "type": "string",
                "format": "uri"
              },
              "uazapiToken": {
                "type": "string"
              },
              "brokerId": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "connect": {
          "name": "ConnectInstance",
          "type": "mutation",
          "path": "/:id/connect",
          "method": "POST",
          "description": "Conectar instância e gerar QR Code",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {}
        },
        "getStatus": {
          "name": "GetInstanceStatus",
          "description": "Verificar status da instância no UAZapi",
          "path": "/:id/status",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        },
        "disconnect": {
          "name": "DisconnectInstance",
          "type": "mutation",
          "path": "/:id/disconnect",
          "method": "POST",
          "description": "Desconectar instância WhatsApp",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {}
        },
        "delete": {
          "name": "DeleteInstance",
          "type": "mutation",
          "path": "/:id",
          "method": "DELETE",
          "description": "Deletar instância e remover do UAZapi",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {}
        },
        "getProfilePicture": {
          "name": "GetInstanceProfilePicture",
          "description": "Obter foto de perfil do WhatsApp conectado",
          "path": "/:id/profile-picture",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        },
        "setWebhook": {
          "name": "SetInstanceWebhook",
          "type": "mutation",
          "path": "/:id/webhook",
          "method": "POST",
          "description": "Configurar webhook para eventos da instância (Admin/GOD apenas)",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {}
        },
        "getWebhook": {
          "name": "GetInstanceWebhook",
          "description": "Obter configuração do webhook (Admin/GOD apenas)",
          "path": "/:id/webhook",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        },
        "share": {
          "name": "ShareInstance",
          "type": "mutation",
          "path": "/:id/share",
          "method": "POST",
          "description": "Gerar token de compartilhamento para instância",
          "use": [
            {
              "name": "AuthProcedure"
            },
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {}
        },
        "getShared": {
          "name": "GetSharedInstance",
          "description": "Obter dados de instância compartilhada via token",
          "path": "/share/:token",
          "use": [
            {
              "name": "instancesProcedure"
            }
          ],
          "method": "GET",
          "$Infer": {}
        },
        "refreshSharedQr": {
          "name": "RefreshSharedQrCode",
          "type": "mutation",
          "path": "/share/:token/refresh",
          "method": "POST",
          "description": "Atualizar QR code de instância compartilhada",
          "use": [
            {
              "name": "instancesProcedure"
            }
          ],
          "$Infer": {}
        }
      }
    },
    "share": {
      "name": "share",
      "path": "/share",
      "actions": {
        "generate": {
          "type": "mutation",
          "path": "/generate",
          "method": "POST",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "instanceId": {
                "type": "string",
                "format": "uuid"
              },
              "expiresInHours": {
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0,
                "default": 24
              }
            },
            "required": [
              "instanceId"
            ],
            "additionalProperties": false
          }
        },
        "validate": {
          "path": "/validate/:token",
          "method": "GET",
          "$Infer": {}
        },
        "generateQR": {
          "type": "mutation",
          "path": "/qr",
          "method": "POST",
          "$Infer": {},
          "bodySchema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "token"
            ],
            "additionalProperties": false
          }
        },
        "checkStatus": {
          "path": "/status/:token",
          "method": "GET",
          "$Infer": {}
        }
      }
    }
  },
  "docs": {
    "openapi": {
      "openapi": "3.0.0",
      "info": {
        "title": "Igniter.js Starter (Next.js)",
        "version": "1.0.0",
        "description": "A sample Next.js App built with Igniter.js"
      },
      "servers": [
        {
          "url": "http://localhost:3000/api/v1",
          "description": "Default server"
        }
      ],
      "tags": [
        {
          "name": "auth",
          "description": "Sistema de autenticação e gerenciamento de usuários"
        },
        {
          "name": "example"
        },
        {
          "name": "instances",
          "description": "Gerenciamento de instâncias WhatsApp com integração UAZapi"
        },
        {
          "name": "share"
        }
      ],
      "paths": {
        "/auth/register": {
          "post": {
            "summary": "Registrar novo usuário com organização padrão",
            "operationId": "Register",
            "tags": [
              "auth"
            ],
            "parameters": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthRegisterBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/auth/login": {
          "post": {
            "summary": "Fazer login com email e senha",
            "operationId": "Login",
            "tags": [
              "auth"
            ],
            "parameters": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthLoginBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/auth/logout": {
          "post": {
            "summary": "Fazer logout e invalidar sessão",
            "operationId": "Logout",
            "tags": [
              "auth"
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/auth/me": {
          "get": {
            "summary": "Obter informações do usuário autenticado",
            "operationId": "GetCurrentUser",
            "tags": [
              "auth"
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/auth/users": {
          "get": {
            "summary": "Listar todos os usuários (requer admin)",
            "operationId": "ListUsers",
            "tags": [
              "auth"
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/auth/invite": {
          "post": {
            "summary": "Convidar novo usuário por email (requer admin)",
            "operationId": "InviteUser",
            "tags": [
              "auth"
            ],
            "parameters": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthInviteUserBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/auth/change-password": {
          "post": {
            "summary": "Alterar senha do usuário",
            "operationId": "ChangePassword",
            "tags": [
              "auth"
            ],
            "parameters": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/AuthChangePasswordBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/auth/invite/:token": {
          "get": {
            "summary": "Validar token de convite",
            "operationId": "ValidateInvite",
            "tags": [
              "auth"
            ],
            "parameters": [
              {
                "name": "token",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/example/hello": {
          "get": {
            "summary": "hello",
            "operationId": "hello",
            "tags": [
              "example"
            ],
            "parameters": [],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/instances": {
          "post": {
            "summary": "Criar nova instância WhatsApp",
            "operationId": "CreateInstance",
            "tags": [
              "instances"
            ],
            "parameters": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InstancesCreateInstanceBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          },
          "get": {
            "summary": "Listar instâncias WhatsApp com paginação e filtros",
            "operationId": "ListInstances",
            "tags": [
              "instances"
            ],
            "parameters": [
              {
                "name": "page",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "integer",
                  "exclusiveMinimum": true,
                  "minimum": 0,
                  "default": 1
                }
              },
              {
                "name": "limit",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "integer",
                  "exclusiveMinimum": true,
                  "minimum": 0,
                  "maximum": 100,
                  "default": 20
                }
              },
              {
                "name": "status",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "connected",
                    "disconnected",
                    "connecting",
                    "all"
                  ],
                  "default": "all"
                }
              },
              {
                "name": "search",
                "in": "query",
                "required": false,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/instances/:id": {
          "get": {
            "summary": "Buscar instância por ID",
            "operationId": "GetInstanceById",
            "tags": [
              "instances"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          },
          "put": {
            "summary": "Atualizar instância existente",
            "operationId": "UpdateInstance",
            "tags": [
              "instances"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/InstancesUpdateInstanceBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          },
          "delete": {
            "summary": "Deletar instância e remover do UAZapi",
            "operationId": "DeleteInstance",
            "tags": [
              "instances"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/instances/:id/connect": {
          "post": {
            "summary": "Conectar instância e gerar QR Code",
            "operationId": "ConnectInstance",
            "tags": [
              "instances"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/instances/:id/status": {
          "get": {
            "summary": "Verificar status da instância no UAZapi",
            "operationId": "GetInstanceStatus",
            "tags": [
              "instances"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/instances/:id/disconnect": {
          "post": {
            "summary": "Desconectar instância WhatsApp",
            "operationId": "DisconnectInstance",
            "tags": [
              "instances"
            ],
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/share/generate": {
          "post": {
            "summary": "generate",
            "operationId": "generate",
            "tags": [
              "share"
            ],
            "parameters": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ShareGenerateBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/share/validate/:token": {
          "get": {
            "summary": "validate",
            "operationId": "validate",
            "tags": [
              "share"
            ],
            "parameters": [
              {
                "name": "token",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/share/qr": {
          "post": {
            "summary": "generateQR",
            "operationId": "generateQR",
            "tags": [
              "share"
            ],
            "parameters": [],
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ShareGenerateQRBody"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        },
        "/share/status/:token": {
          "get": {
            "summary": "checkStatus",
            "operationId": "checkStatus",
            "tags": [
              "share"
            ],
            "parameters": [
              {
                "name": "token",
                "in": "path",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Success",
                "content": {
                  "application/json": {
                    "schema": {}
                  }
                }
              }
            }
          }
        }
      },
      "components": {
        "schemas": {
          "AuthRegisterBody": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "password": {
                "type": "string",
                "minLength": 8
              },
              "name": {
                "type": "string",
                "minLength": 2
              }
            },
            "required": [
              "email",
              "password",
              "name"
            ],
            "additionalProperties": false
          },
          "AuthLoginBody": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "password": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "email",
              "password"
            ],
            "additionalProperties": false
          },
          "AuthInviteUserBody": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email"
              },
              "role": {
                "type": "string",
                "enum": [
                  "admin",
                  "user"
                ],
                "default": "user"
              }
            },
            "required": [
              "email"
            ],
            "additionalProperties": false
          },
          "AuthChangePasswordBody": {
            "type": "object",
            "properties": {
              "currentPassword": {
                "type": "string",
                "minLength": 1
              },
              "newPassword": {
                "type": "string",
                "minLength": 8
              }
            },
            "required": [
              "currentPassword",
              "newPassword"
            ],
            "additionalProperties": false
          },
          "InstancesCreateInstanceBody": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9\\s-_]+$"
              },
              "phoneNumber": {
                "type": "string",
                "pattern": "^\\+?[1-9]\\d{1,14}$"
              },
              "brokerType": {
                "type": "string",
                "enum": [
                  "uazapi"
                ],
                "default": "uazapi"
              },
              "webhookUrl": {
                "type": "string",
                "format": "uri"
              },
              "uazapiToken": {
                "type": "string"
              },
              "brokerId": {
                "type": "string"
              },
              "organizationId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "name"
            ],
            "additionalProperties": false
          },
          "InstancesListInstancesQuery": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "exclusiveMinimum": true,
                "minimum": 0,
                "default": 1
              },
              "limit": {
                "type": "integer",
                "exclusiveMinimum": true,
                "minimum": 0,
                "maximum": 100,
                "default": 20
              },
              "status": {
                "type": "string",
                "enum": [
                  "connected",
                  "disconnected",
                  "connecting",
                  "all"
                ],
                "default": "all"
              },
              "search": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "InstancesUpdateInstanceBody": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100,
                "pattern": "^[a-zA-Z0-9\\s-_]+$"
              },
              "phoneNumber": {
                "type": "string",
                "pattern": "^\\+?[1-9]\\d{1,14}$"
              },
              "brokerType": {
                "type": "string",
                "enum": [
                  "uazapi"
                ]
              },
              "webhookUrl": {
                "type": "string",
                "format": "uri"
              },
              "uazapiToken": {
                "type": "string"
              },
              "brokerId": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "ShareGenerateBody": {
            "type": "object",
            "properties": {
              "instanceId": {
                "type": "string",
                "format": "uuid"
              },
              "expiresInHours": {
                "type": "number",
                "exclusiveMinimum": true,
                "minimum": 0,
                "default": 24
              }
            },
            "required": [
              "instanceId"
            ],
            "additionalProperties": false
          },
          "ShareGenerateQRBody": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "token"
            ],
            "additionalProperties": false
          }
        },
        "securitySchemes": {}
      }
    },
    "info": {
      "title": "Igniter.js Starter (Next.js)",
      "version": "1.0.0",
      "description": "A sample Next.js App built with Igniter.js"
    }
  }
} as const

export type AppRouterSchemaType = typeof AppRouterSchema
