/**
 * Generated by @igniter-js/cli
 *
 * WARNING: DO NOT EDIT THIS FILE MANUALLY
 *
 * Generated: 2025-10-12T16:48:59.443Z
 * Framework: nextjs
 * Output: src
 */

import { createIgniterClient, useIgniterQueryClient } from '@igniter-js/core/client'
import type { AppRouterType } from './igniter.router'

/**
 * Type-safe API client generated from your Igniter router
 *
 * Usage in Server Components:
 * const users = await api.users.list.query()
 *
 * Usage in Client Components:
 * const { data } = api.users.list.useQuery()
 */
export const api = createIgniterClient<AppRouterType>({
  baseURL: process.env.NEXT_PUBLIC_IGNITER_API_URL || 'http://localhost:3000',
  basePath: process.env.NEXT_PUBLIC_IGNITER_API_BASE_PATH || '/api/v1',
  router: () => {
    if (typeof window === 'undefined') {
      return require('./igniter.router').AppRouter
    }

    // Client-side: use schema for type-safe API calls
    return require('./igniter.schema').AppRouterSchema
  },
  // ✅ CORREÇÃO BRUTAL: Custom fetcher com token injection
  fetcher: async (url: string, options: RequestInit = {}) => {
    // Injetar token automaticamente em todas as requisições
    if (typeof window !== 'undefined') {
      const token = localStorage.getItem('accessToken')
      
      if (token) {
        const headers = new Headers(options.headers)
        headers.set('Authorization', `Bearer ${token}`)
        options.headers = headers
      }
    }

    return fetch(url, options)
  },
})

export { useIgniterQueryClient }
