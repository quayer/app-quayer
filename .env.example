# ===========================================
# üîê QUAYER - CONFIGURA√á√ÉO DE AMBIENTE
# ===========================================
# IMPORTANTE: Copie este arquivo para .env e configure os valores
# Comando: cp .env.example .env
#
# Documenta√ß√£o completa: docs/DEPLOYMENT_GUIDE.md

# ===========================================
# üåç APLICA√á√ÉO
# ===========================================
NODE_ENV=development                    # development | production | test
NEXT_PUBLIC_APP_URL=http://localhost:3000
PORT=3000

# ===========================================
# üîß IGNITER.JS FRAMEWORK
# ===========================================
# Nome da aplica√ß√£o
IGNITER_APP_NAME=quayer

# URL onde a API estar√° rodando
NEXT_PUBLIC_IGNITER_API_URL=http://localhost:3000/

# Path base da API
NEXT_PUBLIC_IGNITER_API_BASE_PATH=/api/v1

# Secret key para Igniter.js (OBRIGAT√ìRIO em produ√ß√£o)
# Gerar: openssl rand -base64 32
IGNITER_APP_SECRET=your_random_secret_key_here_change_in_production

# Job queue prefix
IGNITER_JOBS_QUEUE_PREFIX=igniter

# MCP server base path
IGNITER_MCP_SERVER_BASE_PATH=/api/mcp

# MCP session timeout in ms (1 hour)
IGNITER_MCP_SERVER_TIMEOUT=3600000

# Logging level
IGNITER_LOG_LEVEL=info                  # debug | info | warn | error

# Telemetry (Igniter.js observability)
IGNITER_TELEMETRY_ENABLE_TRACING=true
IGNITER_TELEMETRY_ENABLE_METRICS=true
IGNITER_TELEMETRY_ENABLE_EVENTS=true
IGNITER_TELEMETRY_ENABLE_CLI_INTEGRATION=true

# ===========================================
# üîë SEGURAN√áA & AUTENTICA√á√ÉO
# ===========================================
# OBRIGAT√ìRIO: Chave secreta JWT (m√≠nimo 32 caracteres)
# Gerar: openssl rand -base64 32
JWT_SECRET=your_random_secret_key_here_change_in_production

# Tempo de expira√ß√£o dos tokens
JWT_ACCESS_TOKEN_EXPIRES_IN=15m         # Access token (15 minutos)
JWT_REFRESH_TOKEN_EXPIRES_IN=7d         # Refresh token (7 dias)

# ===========================================
# üóÑÔ∏è DATABASE (PostgreSQL)
# ===========================================
# OBRIGAT√ìRIO: Connection string completa
# Formato: postgresql://user:password@host:port/database?schema=public
DATABASE_URL=postgresql://docker:docker@localhost:5432/docker?schema=public

# Configura√ß√µes individuais (usadas pelo Docker Compose)
DB_NAME=docker
DB_USER=docker
DB_PASSWORD=docker
DB_HOST=localhost
DB_PORT=5432

# Shadow Database (usado pelo Prisma Migrate)
SHADOW_DATABASE_URL=postgresql://docker:docker@localhost:5432/docker_shadow?schema=public

# Connection Pool (Produ√ß√£o)
# Para produ√ß√£o, use um pooler (ex: PgBouncer, Supabase Pooler)
# DATABASE_URL=postgresql://user:pass@pooler.supabase.com:6543/postgres?pgbouncer=true

# ===========================================
# üî¥ REDIS (Cache & Queue)
# ===========================================
# OBRIGAT√ìRIO: Connection string do Redis
REDIS_URL=redis://localhost:6379

# Configura√ß√µes individuais
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=                         # Opcional em dev, obrigat√≥rio em prod
REDIS_DB=0                              # Database index (0-15)

# Redis TLS (Produ√ß√£o)
# REDIS_URL=rediss://default:password@redis.upstash.io:6379

# ===========================================
# üìß EMAIL SERVICE
# ===========================================
# Provedor de email: mock | resend | smtp
# - mock: Apenas loga no console (desenvolvimento)
# - resend: Servi√ßo Resend (recomendado para produ√ß√£o)
# - smtp: SMTP gen√©rico (Gmail, Outlook, etc)
EMAIL_PROVIDER=mock

# Email remetente padr√£o
EMAIL_FROM=noreply@quayer.com

# --- Resend (Recomendado para produ√ß√£o) ---
# Obtenha em: https://resend.com/api-keys
RESEND_API_KEY=

# --- SMTP (Gmail, Outlook, Mailgun, etc) ---
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false                       # true para porta 465, false para 587
SMTP_USER=
SMTP_PASS=

# ===========================================
# üì± WHATSAPP (UAZ API)
# ===========================================
# OBRIGAT√ìRIO: URL base da API UAZ
UAZAPI_BASE_URL=https://quayer.uazapi.com

# OBRIGAT√ìRIO: Token admin para criar/deletar inst√¢ncias
# Obtenha em: https://uazapi.com/dashboard
UAZAPI_ADMIN_TOKEN=

# Token padr√£o (fallback)
UAZAPI_TOKEN=



# OBRIGAT√ìRIO: URL do webhook global (para setup autom√°tico)
# Este √© o endpoint que receber√° todos os eventos do uazapi
# Formato: https://seu-dominio.com/api/v1/webhooks/uazapi
UAZAPI_WEBHOOK_URL=https://quayer.com/api/v1/webhooks/uazapi

# ===========================================
# üîê ENCRYPTION (Tokens sens√≠veis)
# ===========================================
# OBRIGAT√ìRIO: Chave de criptografia para tokens
# Gerar: openssl rand -base64 32
# Usado para criptografar uazapiToken no banco de dados
ENCRYPTION_KEY=your_encryption_key_here_change_in_production

# ===========================================
# ü§ñ OPENAI API (Transcri√ß√£o & IA)
# ===========================================
# OBRIGAT√ìRIO para transcri√ß√£o de m√≠dia
# Obtenha em: https://platform.openai.com/api-keys
# Usado para:
# - Whisper: Transcri√ß√£o de √°udio/voz/v√≠deo
# - GPT-4 Vision: Descri√ß√£o de imagens
# - GPT-4: Processamento de texto (futuro)
OPENAI_API_KEY=

# ===========================================
# üîó MESSAGE CONCATENATION (Agrupamento Inteligente)
# ===========================================
# Sistema de concatena√ß√£o de mensagens r√°pidas do mesmo contato
# Documenta√ß√£o completa: MESSAGE_CONCATENATOR_FLOW_COMPLETO.md

# Timeout entre mensagens (milissegundos)
# Padr√£o: 8000ms (8 segundos)
# Recomendado: 5000-10000 (5-10 segundos)
MESSAGE_CONCAT_TIMEOUT=8000

# M√°ximo de mensagens por bloco
# Padr√£o: 10 mensagens
# Recomendado: 10-20 mensagens
MESSAGE_CONCAT_MAX=10

# Concatenar apenas mesmo tipo? (CONFIGURA√á√ÉO CR√çTICA)
# true  = Separa texto, √°udio, imagem (melhor para atendimento humano)
# false = Concatena TUDO junto, independente do formato (melhor para IA/Chatbot)
# Padr√£o: false (ATIVADO - concatena tudo!)
MESSAGE_CONCAT_SAME_TYPE=false

# Apenas mesmo remetente? (SEMPRE true - n√£o alterar)
MESSAGE_CONCAT_SAME_SENDER=true

# ===========================================
# üîê GOOGLE OAUTH (Opcional)
# ===========================================
# OAuth Client ID e Secret
# Obtenha em: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Redirect URI para callback OAuth
GOOGLE_REDIRECT_URI=http://localhost:3000/api/v1/auth/google/callback

# ===========================================
# üö¶ RATE LIMITING (Upstash Redis)
# ===========================================
# Opcional: Upstash Redis REST API para rate limiting distribu√≠do
# Obtenha em: https://console.upstash.com/
UPSTASH_REDIS_REST_URL=
UPSTASH_REDIS_REST_TOKEN=

# ===========================================
# üìä MONITORAMENTO & LOGS
# ===========================================
# Opcional: Sentry para error tracking
# Obtenha em: https://sentry.io/
SENTRY_DSN=
SENTRY_ORG=
SENTRY_PROJECT=

# N√≠vel de log da aplica√ß√£o
LOG_LEVEL=info                          # debug | info | warn | error

# ===========================================
# üöÄ DEPLOY (CI/CD)
# ===========================================
# --- Vercel ---
# Obtenha em: https://vercel.com/account/tokens
VERCEL_TOKEN=
VERCEL_ORG_ID=
VERCEL_PROJECT_ID=

# --- Easypanel ---
# Obtenha em: Easypanel Dashboard > API Settings
EASYPANEL_API_KEY=
EASYPANEL_PROJECT_NAME=quayer-app
EASYPANEL_SERVICE_NAME=app

# --- GitHub ---
# Para CI/CD automation
GITHUB_TOKEN=                           # Configurar no GitHub Secrets

# ===========================================
# üß™ TESTING
# ===========================================
# Banco de dados para testes (isolado)
TEST_DATABASE_URL=postgresql://docker:docker@localhost:5432/docker_test?schema=public

# URL base para testes E2E (Playwright)
BASE_URL=http://localhost:3000

# Playwright
PLAYWRIGHT_BROWSERS_PATH=0              # Usa browsers do sistema

# ===========================================
# üîß DESENVOLVIMENTO
# ===========================================
# Next.js
NEXT_TELEMETRY_DISABLED=1               # Desabilita telemetria do Next.js

# Prisma
PRISMA_HIDE_UPDATE_MESSAGE=true         # Oculta mensagens de update do Prisma

# ===========================================
# üåê PRODU√á√ÉO - VARI√ÅVEIS ADICIONAIS
# ===========================================
# Em produ√ß√£o, configure tamb√©m:
#
# 1. Database com connection pooling:
#    DATABASE_URL=postgresql://user:pass@pooler:6543/db?pgbouncer=true
#
# 2. Redis com TLS:
#    REDIS_URL=rediss://default:pass@redis.upstash.io:6379
#
# 3. Email provider real:
#    EMAIL_PROVIDER=resend
#    RESEND_API_KEY=re_xxxxx
#
# 4. Secrets √∫nicos:
#    JWT_SECRET=$(openssl rand -base64 32)
#    IGNITER_APP_SECRET=$(openssl rand -base64 32)
#
# 5. Monitoramento:
#    SENTRY_DSN=https://xxx@xxx.ingest.sentry.io/xxx
#
# 6. Rate limiting:
#    UPSTASH_REDIS_REST_URL=https://xxx.upstash.io
#    UPSTASH_REDIS_REST_TOKEN=xxxxx

# ===========================================
# üìù NOTAS IMPORTANTES
# ===========================================
# 1. NUNCA commite o arquivo .env no Git
# 2. Use secrets do GitHub Actions para CI/CD
# 3. Gere JWT_SECRET e IGNITER_APP_SECRET √∫nicos para produ√ß√£o
# 4. Configure CORS e rate limiting adequadamente em produ√ß√£o
# 5. Use connection pooling para DATABASE_URL em produ√ß√£o
# 6. Habilite TLS/SSL para Redis e PostgreSQL em produ√ß√£o
# 7. Configure backup autom√°tico do banco de dados
# 8. Monitore uso de recursos (CPU, mem√≥ria, disco)
# 9. Configure logs centralizados (ex: Datadog, Logtail)
# 10. Teste recupera√ß√£o de desastres regularmente
#
# üìñ Documenta√ß√£o completa: docs/DEPLOYMENT_GUIDE.md
