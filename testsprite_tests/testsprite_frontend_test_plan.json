[
  {
    "id": "TC001",
    "title": "User Authentication with OTP",
    "description": "Verify that users can successfully authenticate using OTP, including sending and validating the OTP and handling errors.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the login page"
      },
      {
        "type": "action",
        "description": "Select OTP login flow"
      },
      {
        "type": "action",
        "description": "Enter a valid phone number or email for OTP"
      },
      {
        "type": "action",
        "description": "Request OTP code"
      },
      {
        "type": "assertion",
        "description": "Verify OTP code is sent successfully"
      },
      {
        "type": "action",
        "description": "Enter the correct OTP code received"
      },
      {
        "type": "action",
        "description": "Submit the OTP code"
      },
      {
        "type": "assertion",
        "description": "Verify user is logged in successfully and tokens are securely stored"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Authentication with Magic Link",
    "description": "Ensure users can authenticate via magic link sent to their email and handle invalid or expired links.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Select magic link login option"
      },
      {
        "type": "action",
        "description": "Provide a registered email address"
      },
      {
        "type": "action",
        "description": "Request magic link"
      },
      {
        "type": "assertion",
        "description": "Verify magic link email is sent"
      },
      {
        "type": "action",
        "description": "Click on the magic link within valid time"
      },
      {
        "type": "assertion",
        "description": "Verify user is logged in successfully"
      },
      {
        "type": "action",
        "description": "Attempt to reuse the same magic link"
      },
      {
        "type": "assertion",
        "description": "Verify the link is invalidated and access is denied"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "User Authentication with Google OAuth",
    "description": "Validate Google OAuth login flow including successful authentication and proper error handling when declined.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Click 'Login with Google' button"
      },
      {
        "type": "action",
        "description": "Complete OAuth flow with valid Google credentials"
      },
      {
        "type": "assertion",
        "description": "Verify user is authenticated and logged in"
      },
      {
        "type": "action",
        "description": "Repeat login but cancel OAuth consent"
      },
      {
        "type": "assertion",
        "description": "Verify error message shown and login denied"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Email Verification Process",
    "description": "Confirm email verification flow works, including sending verification email, verifying with valid token, and handling expired or invalid tokens.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Sign up a new user with email"
      },
      {
        "type": "assertion",
        "description": "Verify verification email is sent to user's email"
      },
      {
        "type": "action",
        "description": "Use the email verification link within valid timeframe"
      },
      {
        "type": "assertion",
        "description": "Verify email is marked as verified and access granted"
      },
      {
        "type": "action",
        "description": "Attempt email verification with expired token"
      },
      {
        "type": "assertion",
        "description": "Verify error message regarding expired token is shown"
      },
      {
        "type": "action",
        "description": "Attempt email verification with malformed token"
      },
      {
        "type": "assertion",
        "description": "Verify error message regarding invalid token is shown"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Password Reset Flow",
    "description": "Test the complete password reset process including requesting reset, email link validation, and password update.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to 'Forgot Password' page"
      },
      {
        "type": "action",
        "description": "Enter registered email and request password reset"
      },
      {
        "type": "assertion",
        "description": "Verify password reset email is sent"
      },
      {
        "type": "action",
        "description": "Click password reset link with valid token"
      },
      {
        "type": "action",
        "description": "Enter new valid password and confirm"
      },
      {
        "type": "action",
        "description": "Submit new password"
      },
      {
        "type": "assertion",
        "description": "Verify password is updated and user can login with new password"
      },
      {
        "type": "action",
        "description": "Attempt to use expired or invalid reset token"
      },
      {
        "type": "assertion",
        "description": "Verify reset is denied with appropriate error message"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Onboarding Wizard Completes Organization Creation",
    "description": "Verify the multi-step onboarding wizard successfully creates a new organization (person or company) with correct attributes and user roles.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as a new user without an organization"
      },
      {
        "type": "assertion",
        "description": "Onboarding wizard prompts for organization type selection"
      },
      {
        "type": "action",
        "description": "Select organization type (physical person)"
      },
      {
        "type": "action",
        "description": "Fill in all mandatory fields for personal organization"
      },
      {
        "type": "action",
        "description": "Proceed through each step to final confirmation"
      },
      {
        "type": "action",
        "description": "Submit onboarding wizard"
      },
      {
        "type": "assertion",
        "description": "Verify organization is created in PostgreSQL with correct attributes"
      },
      {
        "type": "assertion",
        "description": "Verify user is assigned proper roles in the new organization"
      },
      {
        "type": "action",
        "description": "Repeat for legal person organization type"
      },
      {
        "type": "assertion",
        "description": "Verify creation with correct legal attributes"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Organization Management CRUD Operations",
    "description": "Ensure admins can create, read, update, and delete organizations with transactional and idempotent operations.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as admin user"
      },
      {
        "type": "action",
        "description": "Navigate to organization management page"
      },
      {
        "type": "action",
        "description": "Create a new organization with valid data"
      },
      {
        "type": "assertion",
        "description": "Verify organization appears in list and persisted correctly"
      },
      {
        "type": "action",
        "description": "Edit the created organization and change fields"
      },
      {
        "type": "assertion",
        "description": "Verify changes are saved and updated correctly"
      },
      {
        "type": "action",
        "description": "Delete the organization"
      },
      {
        "type": "assertion",
        "description": "Verify organization is removed from database"
      },
      {
        "type": "action",
        "description": "Attempt repeated submits of create and update for idempotency"
      },
      {
        "type": "assertion",
        "description": "Verify no duplicate or orphaned records"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Switch Active Organization Context",
    "description": "Test switching between multiple organizations updates user context, tokens, UI data and permissions correctly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as user with multiple organizations"
      },
      {
        "type": "action",
        "description": "Open organization switcher dropdown"
      },
      {
        "type": "action",
        "description": "Select a different organization"
      },
      {
        "type": "assertion",
        "description": "Verify access token updates accordingly"
      },
      {
        "type": "assertion",
        "description": "Verify frontend refreshes showing new organization name and permissions"
      },
      {
        "type": "assertion",
        "description": "Verify data fetched from authenticated API reflects selected organization data"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Invitation System for Joining Organizations",
    "description": "Validate inviting new users via system, accepting invites, assigning roles, and permission enforcement.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as organization admin"
      },
      {
        "type": "action",
        "description": "Invite a new user by email with assigned role"
      },
      {
        "type": "assertion",
        "description": "Verify invitation email is sent"
      },
      {
        "type": "action",
        "description": "New user accepts invitation within valid time"
      },
      {
        "type": "assertion",
        "description": "Verify user is added to organization with assigned role and permissions"
      },
      {
        "type": "action",
        "description": "Attempt to accept invite with expired token"
      },
      {
        "type": "assertion",
        "description": "Verify invite is rejected with error"
      },
      {
        "type": "action",
        "description": "Verify unauthorized users cannot access organization's restricted resources"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "WhatsApp Integration with QR Code Pairing",
    "description": "Test WhatsApp connections management including maximum connection limits, QR modal with countdown and instructions, and accurate connection status display.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as user with WhatsApp integration enabled"
      },
      {
        "type": "action",
        "description": "Navigate to WhatsApp connection dashboard"
      },
      {
        "type": "action",
        "description": "Attempt to add new WhatsApp connection"
      },
      {
        "type": "assertion",
        "description": "Verify QR code pairing modal appears with illustrated step-by-step instructions and countdown timer"
      },
      {
        "type": "action",
        "description": "Scan QR code using WhatsApp mobile app"
      },
      {
        "type": "assertion",
        "description": "Verify connection status updates to connected in real time"
      },
      {
        "type": "action",
        "description": "Attempt to add connections beyond organization limit"
      },
      {
        "type": "assertion",
        "description": "Verify system blocks addition and shows limit exceeded error"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Sharing Resources Via Secure Tokens",
    "description": "Ensure that users can generate share tokens for WhatsApp connections, share public links with time-bound expirations, and that expired or invalid token accesses are denied.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login as user with sharing permissions"
      },
      {
        "type": "action",
        "description": "Generate a share token for a WhatsApp connection with expiration time"
      },
      {
        "type": "assertion",
        "description": "Verify token and public link with optional QR code are generated successfully"
      },
      {
        "type": "action",
        "description": "Access shared public link before expiration"
      },
      {
        "type": "assertion",
        "description": "Verify resource access is granted"
      },
      {
        "type": "action",
        "description": "Access the same link after token expiration time"
      },
      {
        "type": "assertion",
        "description": "Verify access is denied with correct HTTP status code"
      },
      {
        "type": "action",
        "description": "Attempt to use malformed or unauthorized tokens"
      },
      {
        "type": "assertion",
        "description": "Verify access denied with appropriate error message"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Admin Dashboard Data Pagination and Performance",
    "description": "Validate that admin pages return paginated results, avoid N+1 query problems, and perform efficiently with large datasets.",
    "category": "performance",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as admin user"
      },
      {
        "type": "action",
        "description": "Navigate to users, organizations, logs, permissions, and webhooks admin pages"
      },
      {
        "type": "assertion",
        "description": "Verify data results are paginated correctly"
      },
      {
        "type": "assertion",
        "description": "Verify UI shows loading states during data fetch"
      },
      {
        "type": "assertion",
        "description": "Monitor backend queries for N+1 issues and confirm query efficiency"
      },
      {
        "type": "action",
        "description": "Navigate through multiple pages quickly"
      },
      {
        "type": "assertion",
        "description": "Verify UI and backend maintain responsiveness and consistency"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Real-Time Event Handling via Server-Sent Events (SSE)",
    "description": "Test SSE subscriptions to real-time event streams, connection stability, event ordering, and error handling.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as user subscribed to event streams"
      },
      {
        "type": "action",
        "description": "Subscribe to SSE endpoint"
      },
      {
        "type": "assertion",
        "description": "Verify events stream in real-time and UI updates accordingly"
      },
      {
        "type": "action",
        "description": "Simulate intermittent network disconnection"
      },
      {
        "type": "assertion",
        "description": "Verify automatic reconnection attempts and event resume"
      },
      {
        "type": "action",
        "description": "Send invalid or malformed SSE events from backend"
      },
      {
        "type": "assertion",
        "description": "Verify client handles errors gracefully without crashing"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Webhook Event Processing with Security and Rate Limits",
    "description": "Verify webhook endpoints accept valid signed events, reject unauthorized calls, enforce rate limits, and log detailed information without exposing sensitive data.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send valid webhook event with correct authentication token"
      },
      {
        "type": "assertion",
        "description": "Verify event processed and acknowledged successfully"
      },
      {
        "type": "action",
        "description": "Send webhook event with invalid or missing authentication token"
      },
      {
        "type": "assertion",
        "description": "Verify event is rejected with 401 Unauthorized"
      },
      {
        "type": "action",
        "description": "Send events exceeding configured rate limit"
      },
      {
        "type": "assertion",
        "description": "Verify rate limits enforced and requests throttled"
      },
      {
        "type": "action",
        "description": "Inspect logs for event processing including errors ensuring sensitive info is masked"
      },
      {
        "type": "assertion",
        "description": "Verify logs contain necessary context without leaking sensitive data"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Input Validation and Security for User-Provided Data",
    "description": "Ensure all user inputs including organization names, connection names, URLs, and form data validate correctly to prevent injection, SSRF, and malformed input.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Attempt to submit organization creation form with SQL injection payloads"
      },
      {
        "type": "assertion",
        "description": "Verify the input is rejected with validation errors"
      },
      {
        "type": "action",
        "description": "Attempt to enter URLs containing SSRF or XSS payloads in connection names"
      },
      {
        "type": "assertion",
        "description": "Verify input sanitization prevents execution and input is rejected"
      },
      {
        "type": "action",
        "description": "Submit forms with extremely long, malformed, or empty strings"
      },
      {
        "type": "assertion",
        "description": "Verify inputs are validated against defined schemas and errors shown inline"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Messaging System: Send and Receive Chats with Media",
    "description": "Validate sending, receiving, and managing chats and messages including templates, bulk messaging, media uploads/downloads and chat history.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Login and navigate to active session chat window"
      },
      {
        "type": "action",
        "description": "Send text message in chat"
      },
      {
        "type": "assertion",
        "description": "Verify message appears in conversation and is persisted"
      },
      {
        "type": "action",
        "description": "Send media message (image, file) in chat"
      },
      {
        "type": "assertion",
        "description": "Verify media is uploaded, attached, and downloadable"
      },
      {
        "type": "action",
        "description": "Use message templates to send bulk messages"
      },
      {
        "type": "assertion",
        "description": "Verify bulk messages are sent and status shown correctly"
      },
      {
        "type": "action",
        "description": "Reload chat window"
      },
      {
        "type": "assertion",
        "description": "Verify chat history is loaded without data loss"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "CRM Contact and Kanban Pipeline Management",
    "description": "Test creating, updating, deleting contacts and managing Kanban pipelines with drag-and-drop functionality and custom attributes.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to CRM contacts page"
      },
      {
        "type": "action",
        "description": "Create new contact with required fields and custom attributes"
      },
      {
        "type": "assertion",
        "description": "Verify contact is saved and appears in list"
      },
      {
        "type": "action",
        "description": "Move a contact card between Kanban pipeline columns via drag and drop"
      },
      {
        "type": "assertion",
        "description": "Verify pipeline order updates and persisted"
      },
      {
        "type": "action",
        "description": "Edit contact details and save"
      },
      {
        "type": "assertion",
        "description": "Verify updates are visible"
      },
      {
        "type": "action",
        "description": "Delete contact and confirm removal"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "Dynamic Sidebar Navigation Updates",
    "description": "Ensure the sidebar navigation dynamically updates based on user role and active organization with real-time data from backend.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Login as different users with distinct roles and organization memberships"
      },
      {
        "type": "assertion",
        "description": "Verify sidebar items shown correspond accurately to role permissions"
      },
      {
        "type": "action",
        "description": "Switch active organization via sidebar switcher"
      },
      {
        "type": "assertion",
        "description": "Verify sidebar navigation updates immediately to reflect new context"
      },
      {
        "type": "assertion",
        "description": "Verify no stale or mock data is displayed"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "File Upload and Media Management",
    "description": "Test uploading, storing, downloading, and deleting files and media in messaging and CRM features with proper validations.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to file upload interface"
      },
      {
        "type": "action",
        "description": "Upload valid image and document files"
      },
      {
        "type": "assertion",
        "description": "Verify files are uploaded and stored successfully"
      },
      {
        "type": "action",
        "description": "Attempt upload of disallowed file types or oversized files"
      },
      {
        "type": "assertion",
        "description": "Verify validation errors block upload"
      },
      {
        "type": "action",
        "description": "Download previously uploaded files"
      },
      {
        "type": "assertion",
        "description": "Verify file content integrity and download succeeds"
      },
      {
        "type": "action",
        "description": "Delete stored files"
      },
      {
        "type": "assertion",
        "description": "Verify files are removed from storage"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "UI Feedback: Loading States and Inline Errors",
    "description": "Verify that UI components show appropriate loading indicators during async operations and inline errors for validation with intuitive UX.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger any async operation such as data fetch, form submission, or websocket event"
      },
      {
        "type": "assertion",
        "description": "Verify loading spinners or progress indicators are shown"
      },
      {
        "type": "action",
        "description": "Submit form with invalid data"
      },
      {
        "type": "assertion",
        "description": "Verify inline validation error messages are displayed distinctively"
      },
      {
        "type": "action",
        "description": "Simulate backend server error during operation"
      },
      {
        "type": "assertion",
        "description": "Verify error toast or alert is shown without sensitive details"
      }
    ]
  }
]
